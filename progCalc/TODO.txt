Antes de fazer: 
1 -Ler especificacoes
2- Ler "Características do Projeto do μP: Descrição e Explicações (versão alfa)"
3- Ler pdf da entrega 5 Calculadora Programável
4- Olhar diagrama em blocos (Esse deverá ser implementado)
Notas do Enzo:
"A ser feito":
1- Alterar a ROM para um address de 7 bits
2- Alterar a CTRL_unit para contemplar os seguintes sinais/saidas:
    2.1 ULA ; OP_ctrl
    2.2 MUX entrada ULA : ULA_src
    2.3 MUX saida ULA/ entrada ACM: LD_wr_acm
    2.4 MUX de saida ACM / entrada de wr_data (regBank) : LD_wr_reg
    2.4 wr_en do regBank
    2.5 wr_en do ACM
    2.6 wr_en PC
    2.7 jmp-ctrl ( entrada PC) : alterar para a proxima entrega
    State machine deve clocar em :
    s0 : prog_mem
    s1 : regBank  
    s2 : ACM e PC 
3- Para as instruçoes:
    3.1- Vamos usar 4 bits para o OPcode, 3 bits para o reg e 
    os 5 sobrando servirão para o IMM ou indicar destino ou origem em ACM
        minha sugestao no LD: usar 1 bit para indicar destino acumulador, 
        se sim, 7 bits para IMM, 
        se nao, 3 bits para o reg dest e 4 bits IMM

        minha sugestao no MOV: usar 1 bit para indicar destino acumulador, 
        3 bits para registrador destino/ origgem 
        ignorar o resto

    Para as instruçoes: usar sempre oooo a rrr xxxxx

    oooo: OPcode
    a: destino ou origem no ACC (LD,MOV e ADD)
    se a = 0 e OPCODE = LD
    rrr xxxxx = IMM
    se a = 1 e OPCODE = ADDI (=ADD)
    rrr xxxxx = IMM


